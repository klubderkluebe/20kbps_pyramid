{% extends 'layout.jinja2' %}
{% block title %}Release edit{% endblock %}

{% block head %}
<style>
    textarea {width: 100%;}
</style>
{% endblock %}

{% block content %}
    <div style="display:block; text-align:right;">
        <button onclick="uploadToArchiveOrg()">Upload to archive.org</button>
    </div>

    <form method="post" action="/update_release/">
    <input type="hidden" name="release_id" value="{{release.id}}" />

{% if release.release_page %}
    <label for="release_data">Release Data:</label><br/>
    <small>Edit this JSON to e.g. provide the full Discogs release URL in the <i>"discogs"</i> key.</small><br/>
    <textarea name="release_data" rows="10">{{dumps(release.release_data, indent=4)|safe if release.release_data else ''}}</textarea><br/>

    <label for="page_content">Page Content:</label><br/>
    <small>The page content is what is displayed between the cover and the tracklist.</small><br/>
    <textarea name="page_content" rows="10">{{release.release_page.content|safe if release.release_page.content else ''}}</textarea><br/>

    <label for="page_content">Custom Body:</label><br/>
    <small>
        Alternatively, a custom body for the entire release page can be provided.
        When this is non-empty, it takes precedence over <i>content</i>.
    </small><br/>
    <textarea name="custom_body" rows="10">{{release.release_page.custom_body|safe if release.release_page.custom_body else ''}}</textarea><br/>
{% endif %}

{% for ir in release.index_records %}
    <label for="index_record_body">Index Record (<i>{{ir.date}}</i>):</label><br/>
    <small>Enter the body of the index record in this field.</small><br/>
    <textarea name="index_record_body__{{ir.id}}" rows="10">{{ir.body|safe}}</textarea><br/>
{% endfor %}

    <input type="submit" value="Submit">
    </form> 

    <script>
        async function uploadToArchiveOrg() {
            const textarea = document.querySelector('[name="release_data"]')
            const releaseData = JSON.parse(textarea.value)
            let message = (
                "This action will create a new item on archive.org and upload this release's "
                + "audio files and cover to it. The item's description will be the text content of "
                + "the release page's content or custom body.\n\n"
                + "If at a later point you make changes to the release data or page content, "
                + "those changes will have to be mirrored to archive.org manually, so make sure "
                + "you only upload to archive.org when everything is correct.\n\n"                
            )
            if (!!releaseData.archive) {
                message += (
                    "It looks like the release data already has an archive URL. Uploading the release "
                    + "again will *not* have the effect of updating the content of the same archive.org item. "
                    + "Please proceed only if you know that what you are doing is correct.\n\n"
                )
            }
            message += "Are you sure you want to upload the release to archive.org now?"

            if (!confirm(message)) return;

            const formData = new FormData()
            formData.append('file', '{{release.file}}')

            const res = await fetch(
                `/request_iaupload/`,
                {
                    method: 'POST',
                    headers: {
                        'Authorization': '{{authorization}}',
                    },
                    body: formData,
                }                    
            )
            if (res.status === 204) {
                location.href = '/check_iaupload/{{release.file}}/'
            } else {
                alert(`Error requesting archive.org upload of {{release.catalog_no}} (${res.status} ${res.statusText})`)
            }
        }
    </script>
{% endblock %}